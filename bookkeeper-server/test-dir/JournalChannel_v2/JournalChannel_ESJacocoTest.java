/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 02:27:45 GMT 2025
 */

package org.apache.bookkeeper.bookie;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Converter;
import com.google.common.base.Function;
import io.netty.buffer.PooledByteBufAllocator;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.net.URI;
import java.nio.ByteBuffer;
import java.nio.channels.ClosedChannelException;
import org.apache.bookkeeper.bookie.BufferedChannel;
import org.apache.bookkeeper.bookie.DefaultFileChannelProvider;
import org.apache.bookkeeper.bookie.FileChannelProvider;
import org.apache.bookkeeper.bookie.Journal;
import org.apache.bookkeeper.bookie.JournalChannel;
import org.apache.bookkeeper.conf.ServerConfiguration;
import org.apache.commons.configuration2.JSONConfiguration;
import org.apache.commons.configuration2.sync.Synchronizer;
import org.eclipse.jetty.io.ByteBufferPool;
import org.eclipse.jetty.io.MappedByteBufferPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class JournalChannel_ESTest extends JournalChannel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("d", "d");
      MockFile mockFile1 = new MockFile("");
      try { 
        JournalChannel.renameJournalFile(mockFile0, mockFile1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Failed to rename file /home/fmasci/progetti_uni/isw2/testing/bookkeeper/bookkeeper-server/d/d to 
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel((File) null, (-463L), 0L, 314, 314, true, 39, (ServerConfiguration) null, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("q!t.(4", "");
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, (-1635L), (-1635L), 604, (ServerConfiguration) null, (FileChannelProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, 1850L, 0L, 0, serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel((File) null, 1000L, 1000L, (-20), (ServerConfiguration) null, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialCapacity : -20 (expected: >= 0)
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Failed to rename file {} to {}", "Failed to rename file {} to {}");
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, 2147482623L, (-3L), (-196), (-2904L), (ServerConfiguration) null, (FileChannelProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "$0q'KJoG,#'nI~Zo");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, (-885L), 0L, (-3034), 0L, serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialCapacity : -3034 (expected: >= 0)
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      File file0 = MockFile.createTempFile("=9]0uP6bI@0", "io.reactivex.rxjava3.internal.operators.observable.ObservableFromPublisher");
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(file0, 0L, 0L, 1467, 1467, (ServerConfiguration) null, defaultFileChannelProvider0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // File /tmp/=9]0uP6bI@00io.reactivex.rxjava3.internal.operators.observable.ObservableFromPublisher/0.txn suddenly appeared, is another bookie process running?
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("only \"true\" or \"false\" recognized");
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, (-2377L), 2656L, 2146894973, 4194304L, (ServerConfiguration) null, defaultFileChannelProvider0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel((File) null, (-12345L), (-12345L), 421, (-5044), true, 0, serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.filefilter.WildcardFileFilter$Builder", "org.apache.commons.io.filefilter.WildcardFileFilter$Builder");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, (-3065L), 456L, (-551), 788, false, 512, serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialCapacity : -551 (expected: >= 0)
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile("io.reactivex.rxjava3.internal.functions.Functions$EmptyRunnable", "io.reactivex.rxjava3.internal.functions.Functions$EmptyRunnable");
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, 0L, 2L, (-3), 0, false, (-3), (ServerConfiguration) null, defaultFileChannelProvider0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("o/7H1!");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, (-12345L), 524288L, 409, 409, true, 409, serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("36E!$:%,:", "('YZ6F0&");
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = mock(Journal.BufferedChannelBuilder.class, new ViolatedAssumptionAnswer());
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      Long long0 = new Long(950);
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, 1000L, 1000L, (-944), (-944), true, 131, journal_BufferedChannelBuilder0, serverConfiguration0, (FileChannelProvider) null, long0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = mock(Journal.BufferedChannelBuilder.class, new ViolatedAssumptionAnswer());
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, 1275L, 1275L, (-12345), 0, false, (-1286), journal_BufferedChannelBuilder0, serverConfiguration0, defaultFileChannelProvider0, (Long) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, 3228L);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, 4195L, 4195L, 0, 4195L, (ServerConfiguration) null, defaultFileChannelProvider0);
      journalChannel0.forceWrite(false);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, 1000L, 1000L, 0, (ServerConfiguration) null, defaultFileChannelProvider0);
      journalChannel0.close();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, 1000L, 1000L, 0, (ServerConfiguration) null, defaultFileChannelProvider0);
      journalChannel0.preAllocIfNeeded(0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, 1000L, 1000L, 0, (ServerConfiguration) null, defaultFileChannelProvider0);
      BufferedChannel bufferedChannel0 = journalChannel0.getBufferedChannel();
      assertEquals(512L, bufferedChannel0.position());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFile mockFile0 = new MockFile("o/7H1!");
      MockFile mockFile1 = new MockFile("o/7H1!", "");
      mockFile0.renameTo(mockFile1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("o/7H1!/ffffffffffffcfc7.txn");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-72);
      byteArray0[1] = (byte)88;
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte) (-77);
      byteArray0[4] = (byte)5;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      long long0 = 524288L;
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      mockFile1.deleteOnExit();
      ServerConfiguration serverConfiguration1 = serverConfiguration0.setEnableLocalTransport(true);
      ServerConfiguration serverConfiguration2 = serverConfiguration1.setIsThrottleByBytes(true);
      serverConfiguration1.setSynchronizer((Synchronizer) null);
      ServerConfiguration serverConfiguration3 = serverConfiguration2.setDisableServerSocketBind(false);
      ServerConfiguration serverConfiguration4 = serverConfiguration3.setEntryLogPerLedgerCounterLimitsMultFactor(409);
      serverConfiguration1.isEmpty();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, (-12345L), 524288L, 409, 409, true, 409, serverConfiguration4, defaultFileChannelProvider0);
      serverConfiguration4.getWaitTimeoutOnResponseBackpressureMillis();
      // Undeclared exception!
      try { 
        journalChannel0.forceWrite(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("fffffffffffffc0f.txn");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Certificate for <");
      JournalChannel journalChannel0 = new JournalChannel((File) null, (-1009L));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("fffffffffffffc0f.txn");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Certificate for <");
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, (-1009L), 524800L, 409, serverConfiguration0, defaultFileChannelProvider0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("fffffffffffffc0f.txn");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Certificate for <");
      ServerConfiguration serverConfiguration1 = serverConfiguration0.setCompactionMaxOutstandingRequests(2145020931);
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      ServerConfiguration serverConfiguration2 = serverConfiguration1.setJournalAlignmentSize(73);
      ServerConfiguration serverConfiguration3 = serverConfiguration2.setHttpServerPort(73);
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, (-1009L), 524800L, 409, serverConfiguration3, defaultFileChannelProvider0);
      journalChannel0.nextPrealloc = (-1009L);
      serverConfiguration3.getSource("ledgerManagerFactoryDisableClassCheck");
      journalChannel0.close();
      journalChannel0.close();
      boolean boolean0 = true;
      Function<Object, ByteBufferPool.Bucket> function0 = (Function<Object, ByteBufferPool.Bucket>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function1 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Converter<Integer, ByteBufferPool.Bucket> converter0 = Converter.from((Function<? super Integer, ? extends ByteBufferPool.Bucket>) function0, (Function<? super ByteBufferPool.Bucket, ? extends Integer>) function1);
      Converter<ByteBufferPool.Bucket, ByteBufferPool.Bucket> converter1 = Converter.identity();
      Converter<Integer, ByteBufferPool.Bucket> converter2 = converter0.andThen(converter1);
      MappedByteBufferPool mappedByteBufferPool0 = new MappedByteBufferPool(6, 2145020931, converter2, (-12345L), (-12345L));
      ByteBuffer byteBuffer0 = mappedByteBufferPool0.acquire(353, true);
      try { 
        journalChannel0.read(byteBuffer0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      File file0 = MockFile.createTempFile("x~8kz/", "x~8kz/", (File) null);
      try { 
        JournalChannel.renameJournalFile(file0, (File) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Failed to rename file /tmp/x~8kz/0x~8kz to null
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      try { 
        JournalChannel.renameJournalFile((File) null, (File) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Failed to rename file null to null
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel((File) null, (-508L), (-508L), 4, 4, true, 4, serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("fffffffffffffc0f.txn");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "enforceMinNumRacksPerWriteQuorum");
      JournalChannel journalChannel0 = new JournalChannel((File) null, (-1009L));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      long long0 = 196L;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("G4HhcmIB_NH3LXA|C/G4HhcmIB_NH3LXA|C/c4.txn");
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(true);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.createFolder(evoSuiteFile0);
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = mock(Journal.BufferedChannelBuilder.class, new ViolatedAssumptionAnswer());
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      MockFile mockFile0 = new MockFile("G4HhcmIB_NH3LXA|C", "G4HhcmIB_NH3LXA|C");
      Long long1 = new Long(5242880L);
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, 196L, 60000, 60000, 60000, false, 60000, journal_BufferedChannelBuilder0, (ServerConfiguration) null, defaultFileChannelProvider0, long1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("fffffffffffffc0f.txn");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Certificate fohr <");
      JournalChannel journalChannel0 = new JournalChannel((File) null, (-1009L));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = mock(Journal.BufferedChannelBuilder.class, new ViolatedAssumptionAnswer());
      doReturn((BufferedChannel) null).when(journal_BufferedChannelBuilder0).create(any(java.nio.channels.FileChannel.class) , anyInt());
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      MockFile mockFile0 = new MockFile("G4HhcmIB_NH3LXA|C", "G4HhcmIB_NH3LXA|C");
      Long long0 = new Long(5242880L);
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, 5242880L, 60000, 60000, 60000, false, 60000, journal_BufferedChannelBuilder0, (ServerConfiguration) null, defaultFileChannelProvider0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockFile mockFile0 = new MockFile(" failed.", " failed.");
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = mock(Journal.BufferedChannelBuilder.class, new ViolatedAssumptionAnswer());
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      Long long0 = new Long((-3638));
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, 8L, 8L, (-3638), 65294, true, (-3638), journal_BufferedChannelBuilder0, serverConfiguration0, defaultFileChannelProvider0, long0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Invalid journal format to write : version = -3638
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel((File) null, (-1009L), (-1009L), 409, serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel((File) null, 524208L, 524208L, 90, 2534, false, 90, serverConfiguration0, (FileChannelProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/Failed to rename file {} to {}0/ffffffffffff80.txn");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = MockFile.createTempFile("Failed to rename file {} to {}", "");
      JournalChannel journalChannel0 = new JournalChannel(file0, 72057594037927808L);
  }
}
