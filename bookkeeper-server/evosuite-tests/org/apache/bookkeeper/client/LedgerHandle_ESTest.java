/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 22 20:57:53 GMT 2025
 */

package org.apache.bookkeeper.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.channel.epoll.VSockAddress;
import java.util.EnumSet;
import org.apache.bookkeeper.client.BookKeeper;
import org.apache.bookkeeper.client.ClientContext;
import org.apache.bookkeeper.client.LedgerHandle;
import org.apache.bookkeeper.client.api.LedgerMetadata;
import org.apache.bookkeeper.client.api.WriteFlag;
import org.apache.bookkeeper.versioning.Version;
import org.apache.bookkeeper.versioning.Versioned;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class LedgerHandle_ESTest extends LedgerHandle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LedgerHandle.NoopCloseCallback ledgerHandle_NoopCloseCallback0 = new LedgerHandle.NoopCloseCallback();
      VSockAddress vSockAddress0 = new VSockAddress((-14), 0);
      // Undeclared exception!
      try { 
        ledgerHandle_NoopCloseCallback0.closeComplete(4096, (LedgerHandle) null, vSockAddress0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.bookkeeper.client.api.BKException
         //
         verifyException("org.apache.bookkeeper.client.LedgerHandle$NoopCloseCallback", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LedgerHandle.LastConfirmedCtx ledgerHandle_LastConfirmedCtx0 = new LedgerHandle.LastConfirmedCtx();
      ledgerHandle_LastConfirmedCtx0.response = 0L;
      boolean boolean0 = ledgerHandle_LastConfirmedCtx0.ready();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Version version0 = Version.ANY;
      Versioned<LedgerMetadata> versioned0 = new Versioned<LedgerMetadata>((LedgerMetadata) null, version0);
      BookKeeper.DigestType bookKeeper_DigestType0 = BookKeeper.DigestType.CRC32C;
      byte[] byteArray0 = new byte[4];
      EnumSet<WriteFlag> enumSet0 = WriteFlag.NONE;
      LedgerHandle ledgerHandle0 = null;
      try {
        ledgerHandle0 = new LedgerHandle((ClientContext) null, 1294L, versioned0, bookKeeper_DigestType0, byteArray0, enumSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.client.LedgerHandle", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LedgerHandle.NoopCloseCallback ledgerHandle_NoopCloseCallback0 = new LedgerHandle.NoopCloseCallback();
      // Undeclared exception!
      try { 
        ledgerHandle_NoopCloseCallback0.closeComplete((-100), (LedgerHandle) null, LedgerHandle.NoopCloseCallback.instance);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.bookkeeper.client.api.BKException
         //
         verifyException("org.apache.bookkeeper.client.LedgerHandle$NoopCloseCallback", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LedgerHandle.LastConfirmedCtx ledgerHandle_LastConfirmedCtx0 = new LedgerHandle.LastConfirmedCtx();
      boolean boolean0 = ledgerHandle_LastConfirmedCtx0.ready();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LedgerHandle.LastConfirmedCtx ledgerHandle_LastConfirmedCtx0 = new LedgerHandle.LastConfirmedCtx();
      long long0 = ledgerHandle_LastConfirmedCtx0.getlastConfirmed();
      assertEquals((-10L), long0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LedgerHandle.LastConfirmedCtx ledgerHandle_LastConfirmedCtx0 = new LedgerHandle.LastConfirmedCtx();
      int int0 = ledgerHandle_LastConfirmedCtx0.getRC();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LedgerHandle.LastConfirmedCtx ledgerHandle_LastConfirmedCtx0 = new LedgerHandle.LastConfirmedCtx();
      ledgerHandle_LastConfirmedCtx0.setLastConfirmed((-844L));
      boolean boolean0 = ledgerHandle_LastConfirmedCtx0.ready();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LedgerHandle.LastConfirmedCtx ledgerHandle_LastConfirmedCtx0 = new LedgerHandle.LastConfirmedCtx();
      ledgerHandle_LastConfirmedCtx0.setRC(0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      LedgerHandle.NoopCloseCallback ledgerHandle_NoopCloseCallback0 = new LedgerHandle.NoopCloseCallback();
      LedgerHandle.NoopCloseCallback.instance.closeComplete(0, (LedgerHandle) null, ledgerHandle_NoopCloseCallback0);
  }
}
