/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 03:28:00 GMT 2025
 */

package org.apache.bookkeeper.bookie;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.buffer.PooledByteBufAllocator;
import java.io.File;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.channels.ClosedChannelException;
import java.nio.charset.Charset;
import org.apache.bookkeeper.bookie.BufferedChannel;
import org.apache.bookkeeper.bookie.DefaultFileChannelProvider;
import org.apache.bookkeeper.bookie.FileChannelProvider;
import org.apache.bookkeeper.bookie.Journal;
import org.apache.bookkeeper.bookie.JournalChannel;
import org.apache.bookkeeper.conf.ServerConfiguration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import sun.nio.ch.FileChannelImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class JournalChannel_ESTest extends JournalChannel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Opening journal {}");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, 3868L, 508L, 8, 409, false, 8, serverConfiguration0, defaultFileChannelProvider0);
      journalChannel0.preAllocIfNeeded(409);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile("", "");
      try { 
        JournalChannel.renameJournalFile(mockFile1, mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Failed to rename file / to 
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("io.prometheus.client.Enumeration$Child/fffffffffffff45b.txn");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "~[[%ZHF5K% LsxFeS");
      MockFile mockFile0 = new MockFile((String) null, "io.prometheus.client.Enumeration$Child");
      int int0 = 2475;
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      ServerConfiguration serverConfiguration1 = serverConfiguration0.setUseShortHostName(true);
      ServerConfiguration serverConfiguration2 = serverConfiguration1.setJournalChannelProvider("limitStatsLogging");
      ServerConfiguration serverConfiguration3 = serverConfiguration2.setMinUsableSizeForHighPriorityWrites(404);
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, (-2981L), (-2981L), 2475, 404, true, 404, serverConfiguration3, defaultFileChannelProvider0);
      serverConfiguration3.getSkipListArenaChunkSize();
      try { 
        FileChannelProvider.newProvider("com.google.common.primitives.IntsMethodsForWeb");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.lang.NoSuchMethodException: com.google.common.primitives.IntsMethodsForWeb.<init>()
         //
         verifyException("org.apache.bookkeeper.bookie.FileChannelProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JournalChannel journalChannel0 = new JournalChannel((File) null, (-1638L));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, 2312L, 2312L, 3, serverConfiguration0, defaultFileChannelProvider0);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("enforceMinNumRacksPerWriteQuorum");
      int int0 = journalChannel0.read(byteBuffer0);
      assertEquals(0, byteBuffer0.remaining());
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      // Undeclared exception!
      try { 
        JournalChannel.renameJournalFile(mockFile0, mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, 614L);
      journalChannel0.close();
      try { 
        journalChannel0.read(journalChannel0.zeros);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Opening journal {}", "Opening journal {}");
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, 1145L);
      // Undeclared exception!
      try { 
        journalChannel0.read((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, 8L);
      journalChannel0.nextPrealloc = 8L;
      journalChannel0.close();
      try { 
        journalChannel0.preAllocIfNeeded(8L);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JournalChannel journalChannel0 = new JournalChannel((File) null, 479L);
      journalChannel0.close();
      try { 
        journalChannel0.forceWrite(false);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("io.prometheus.client.Enumeration$Child/fffffffffffff45b.txn");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "~[[%ZHF5K% LsxFeS");
      MockFile mockFile0 = new MockFile((String) null, "io.prometheus.client.Enumeration$Child");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, (-2981L), (-2981L), 2475, 404, true, 404, serverConfiguration0, defaultFileChannelProvider0);
      try { 
        journalChannel0.close();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile(" suddenly appeared, is another bookie process running?");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, 300000L, 300000L, 1878, serverConfiguration0, (FileChannelProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel((File) null, (-432L), (-432L), 0, (ServerConfiguration) null, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel((File) null, (-609L), (-1L), (-1510), serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialCapacity : -1510 (expected: >= 0)
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      File file0 = MockFile.createTempFile("-5[KC(w7 R2F", "-5[KC(w7 R2F");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(file0, 0L, 0L, 0, serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // File /tmp/-5[KC(w7 R2F0-5[KC(w7 R2F/0.txn suddenly appeared, is another bookie process running?
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "Invalid journal version, unable to read. Expected between (%d) and (%d), got (%d)");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, (-1203L), 120L, 0, 120L, serverConfiguration0, (FileChannelProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel((File) null, 1134L, 0L, 0, 0, serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("cert-", "cert-");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, 661L, 661L, (-2002), (-815L), serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialCapacity : -2002 (expected: >= 0)
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      File file0 = MockFile.createTempFile("Lhy%mFM\nJE/%d)]", "Lhy%mFM\nJE/%d)]");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(file0, 2L, 2L, (-2929), 15000L, serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // File /tmp/Lhy%mFM
         // JE/%d)]0Lhy%mFM
         // JE/%d)]/2.txn suddenly appeared, is another bookie process running?
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, (-3083L), 2160L, 2146676626, 2160L, serverConfiguration0, defaultFileChannelProvider0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel((File) null, 1192L, 2147484159L, 1, 1306, false, 18, (ServerConfiguration) null, (FileChannelProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "*I");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, (-1386L), 0L, (-3475), 8, true, 8, serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialCapacity : -3475 (expected: >= 0)
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockFile mockFile0 = new MockFile("KW6Du-J`+?e}C:");
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, 1535L, 1535L, 0, 0, false, 0, (ServerConfiguration) null, defaultFileChannelProvider0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, 3655, 65536L, 1858, 1858, serverConfiguration0, defaultFileChannelProvider0);
      BufferedChannel bufferedChannel0 = journalChannel0.bc;
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = mock(Journal.BufferedChannelBuilder.class, new ViolatedAssumptionAnswer());
      doReturn(bufferedChannel0).when(journal_BufferedChannelBuilder0).create(any(java.nio.channels.FileChannel.class) , anyInt());
      journalChannel0.close();
      Long long0 = new Long(65536L);
      JournalChannel journalChannel1 = null;
      try {
        journalChannel1 = new JournalChannel((File) null, 65536L, 65536L, 3655, 3655, true, 3655, journal_BufferedChannelBuilder0, serverConfiguration0, defaultFileChannelProvider0, long0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel((File) null, 982L, 982L, (-412), (-412), false, (-412), (Journal.BufferedChannelBuilder) null, (ServerConfiguration) null, defaultFileChannelProvider0, (Long) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockFile mockFile0 = new MockFile("0@3@,C=^u3rY");
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = mock(Journal.BufferedChannelBuilder.class, new ViolatedAssumptionAnswer());
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      Long long0 = Long.valueOf(4194304L);
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, 0L, 0L, 512, 0, false, (-12345), journal_BufferedChannelBuilder0, serverConfiguration0, defaultFileChannelProvider0, long0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Opening journal {}", "Opening journal {}");
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, 1145L);
      journalChannel0.forceWrite(true);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("io.prometheus.client.Enumeration$Child/fffffffffffff45b.txn");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "~[[%ZHF5K% LsxFeS");
      MockFile mockFile0 = new MockFile((String) null, "io.prometheus.client.Enumeration$Child");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, (-2981L), (-2981L), 2475, 404, false, 404, serverConfiguration0, defaultFileChannelProvider0);
      // Undeclared exception!
      try { 
        journalChannel0.preAllocIfNeeded(2475);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile(" to ");
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, (-1623L));
      journalChannel0.preAllocIfNeeded(6);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("fffffffffffffd9f.txn");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "ignoreLocalNodeInPlacementPolicy");
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, (-609L), (-2445L), (-1510), serverConfiguration0, defaultFileChannelProvider0);
      try { 
        journalChannel0.getBufferedChannel();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Read only journal channel
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockFile mockFile0 = new MockFile("nameValuePairs must be arrays of [name, value] pairs");
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, 3600L);
      BufferedChannel bufferedChannel0 = journalChannel0.getBufferedChannel();
      assertEquals(512L, bufferedChannel0.position());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      File file0 = MockFile.createTempFile("org.apache.bookkeeper.bookie.JournalChannel", "org.apache.bookkeeper.bookie.JournalChannel", (File) null);
      try { 
        JournalChannel.renameJournalFile(file0, (File) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Failed to rename file /tmp/org.apache.bookkeeper.bookie.JournalChannel0org.apache.bookkeeper.bookie.JournalChannel to null
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      try { 
        JournalChannel.renameJournalFile((File) null, (File) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Failed to rename file null to null
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("fffffffffffff3f5.txn");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, (-3083L), 2160L, 2146676626, 2160L, serverConfiguration0, defaultFileChannelProvider0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("908.txn");
      FileSystemHandling.createFolder(evoSuiteFile0);
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      ServerConfiguration serverConfiguration1 = serverConfiguration0.setRequestTimerNumTicks(3);
      ServerConfiguration serverConfiguration2 = serverConfiguration1.setReadBufferBytes(3);
      ServerConfiguration serverConfiguration3 = serverConfiguration2.setJournalAlignmentSize(3);
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, 2312L, 2312L, 3, serverConfiguration3, defaultFileChannelProvider0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        journalChannel0.forceWrite(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      MockFile mockFile0 = new MockFile("zFje%+Me{");
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, (-502L));
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = mock(Journal.BufferedChannelBuilder.class, new ViolatedAssumptionAnswer());
      Long long0 = new Long(751L);
      JournalChannel journalChannel1 = new JournalChannel(mockFile0, (-502L), 2313, (-3084), 8, false, 2313, journal_BufferedChannelBuilder0, (ServerConfiguration) null, defaultFileChannelProvider0, long0);
      assertFalse(journalChannel1.equals((Object)journalChannel0));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = mock(Journal.BufferedChannelBuilder.class, new ViolatedAssumptionAnswer());
      Long long0 = new Long((-1510));
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel((File) null, (-1129L), (-1510), (-1510), 5, false, (-1510), journal_BufferedChannelBuilder0, serverConfiguration0, defaultFileChannelProvider0, long0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Invalid journal format to write : version = -1510
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      MockFile mockFile0 = new MockFile("zFje%+Me{");
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = mock(Journal.BufferedChannelBuilder.class, new ViolatedAssumptionAnswer());
      doReturn((BufferedChannel) null).when(journal_BufferedChannelBuilder0).create(any(java.nio.channels.FileChannel.class) , anyInt());
      Long long0 = new Long(751L);
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, (-502L), 2313, (-3084), 8, false, 2313, journal_BufferedChannelBuilder0, (ServerConfiguration) null, defaultFileChannelProvider0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(false);
      JournalChannel journalChannel0 = new JournalChannel((File) null, 490L);
      FileChannelImpl fileChannelImpl0 = (FileChannelImpl)journalChannel0.fc;
      BufferedChannel bufferedChannel0 = new BufferedChannel(pooledByteBufAllocator0, fileChannelImpl0, 6);
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = mock(Journal.BufferedChannelBuilder.class, new ViolatedAssumptionAnswer());
      doReturn(bufferedChannel0).when(journal_BufferedChannelBuilder0).create(any(java.nio.channels.FileChannel.class) , anyInt());
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      Long long0 = new Long(65536L);
      JournalChannel journalChannel1 = new JournalChannel((File) null, 65536L, 65536L, 3655, 3655, true, 3655, journal_BufferedChannelBuilder0, serverConfiguration0, defaultFileChannelProvider0, long0);
      assertEquals(512L, bufferedChannel0.getFileChannelPosition());
      assertEquals(512L, bufferedChannel0.position());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = new JournalChannel((File) null, 1364L, 1364L, 2, serverConfiguration0, defaultFileChannelProvider0);
      int int0 = journalChannel0.read(journalChannel0.zeros);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MockFile mockFile0 = new MockFile("~[[%ZHF5K% LsxFeS", "io.prometheus.client.Enumeration$Child");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      DefaultFileChannelProvider defaultFileChannelProvider0 = new DefaultFileChannelProvider();
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(mockFile0, (-2981L), (-2981L), 2475, 404, true, 404, serverConfiguration0, defaultFileChannelProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JournalChannel journalChannel0 = new JournalChannel((File) null, 1032L);
      int int0 = journalChannel0.getFormatVersion();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      File file0 = MockFile.createTempFile(".txn", ".txn");
      JournalChannel journalChannel0 = null;
      try {
        journalChannel0 = new JournalChannel(file0, 2048L);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // File /tmp/.txn0.txn/800.txn suddenly appeared, is another bookie process running?
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }
}
