/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 22 20:47:51 GMT 2025
 */

package org.apache.bookkeeper.bookie;

import io.netty.buffer.*;
import org.apache.bookkeeper.bookie.stats.JournalStats;
import org.apache.bookkeeper.common.collections.BatchedBlockingQueue;
import org.apache.bookkeeper.common.util.MemoryLimitController;
import org.apache.bookkeeper.conf.ServerConfiguration;
import org.apache.bookkeeper.proto.BookkeeperInternalCallbacks;
import org.apache.bookkeeper.stats.CachingStatsLogger;
import org.apache.bookkeeper.stats.Counter;
import org.apache.bookkeeper.stats.NullStatsLogger;
import org.apache.bookkeeper.stats.OpStatsLogger;
import org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider;
import org.apache.bookkeeper.stats.prometheus.ScopeContext;
import org.apache.bookkeeper.stats.prometheus.ThreadScopedDataSketchesStatsLogger;
import org.apache.bookkeeper.stats.prometheus.ThreadScopedLongAdderCounter;
import org.apache.bookkeeper.util.DiskChecker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.io.File;
import java.io.IOException;
import java.nio.channels.FileChannel;
import java.nio.file.StandardOpenOption;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class Journal_ESPitTest extends Journal_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      journal0.shutdown();
      Long long0 = Long.getLong("enforceMinNumRacksPerWriteQuorum", 0L);
      // Undeclared exception!
      try { 
        journal0.newLogFile(0L, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.BufferedChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("vKTN\"DAkAwM.?", "vKTN\"DAkAwM.?");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[6];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      fileArray0[2] = (File) mockFile0;
      fileArray0[3] = (File) mockFile0;
      fileArray0[4] = (File) mockFile0;
      fileArray0[5] = (File) mockFile0;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null);
      NullStatsLogger nullStatsLogger0 = new NullStatsLogger();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true);
      JournalAliveListener journalAliveListener0 = mock(JournalAliveListener.class, new ViolatedAssumptionAnswer());
      Journal journal0 = new Journal(0, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, unpooledByteBufAllocator0, journalAliveListener0);
      Journal.JournalScanner journal_JournalScanner0 = mock(Journal.JournalScanner.class, new ViolatedAssumptionAnswer());
      long long0 = journal0.scanJournal((-32768L), (-32768L), journal_JournalScanner0, true);
      assertEquals(516L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BookieImpl.NopWriteCallback bookieImpl_NopWriteCallback0 = new BookieImpl.NopWriteCallback();
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      OpStatsLogger opStatsLogger0 = nullStatsLogger0.getOpStatsLogger("f");
      CachingStatsLogger cachingStatsLogger0 = new CachingStatsLogger(nullStatsLogger0);
      Counter counter0 = cachingStatsLogger0.getCounter("f");
      Journal.QueueEntry journal_QueueEntry0 = Journal.QueueEntry.create((ByteBuf) null, false, (-32768L), (-32768L), bookieImpl_NopWriteCallback0, (Object) null, 1205L, opStatsLogger0, counter0);
      journal_QueueEntry0.run();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("I/O exception while closing file");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[1];
      fileArray0[0] = (File) mockFile0;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null);
      Journal journal0 = new Journal(10, mockFile0, serverConfiguration0, ledgerDirsManager0);
      Journal.LastLogMark journal_LastLogMark0 = journal0.new LastLogMark(1859L, 10);
      journal_LastLogMark0.rollLog(journal_LastLogMark0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      Journal.LastLogMark journal_LastLogMark0 = journal0.new LastLogMark(0L, 8199);
      journal_LastLogMark0.setCurLogMark(8199, 0L);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.95F, 0);
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0);
      Journal journal0 = new Journal(0, (File) null, serverConfiguration0, ledgerDirsManager0);
      Journal.LastLogMark journal_LastLogMark0 = journal0.new LastLogMark(15000L, 0);
      Journal.LastLogMark journal_LastLogMark1 = journal_LastLogMark0.markLog();
      try { 
        journal_LastLogMark0.rollLog(journal_LastLogMark1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // All ledger directories are non writable and no reserved space (1073741824) left.
         //
         verifyException("org.apache.bookkeeper.bookie.LedgerDirsManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = Journal.BufferedChannelBuilder.DEFAULT_BCBUILDER;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("io.netty.handler.codec.ByteToMessageDecoder");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      BufferedChannel bufferedChannel0 = journal_BufferedChannelBuilder0.create(fileChannel0, 0);
      assertEquals(0L, bufferedChannel0.position());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      CheckpointSource.Checkpoint checkpointSource_Checkpoint0 = journal0.newCheckpoint();
      journal0.checkpointComplete(checkpointSource_Checkpoint0, true);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.95F, 0);
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0);
      Journal journal0 = new Journal(0, (File) null, serverConfiguration0, ledgerDirsManager0);
      JournalChannel journalChannel0 = journal0.newLogFile(1311L, (Long) null);
      assertNotNull(journalChannel0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      File file0 = journal0.getJournalDirectory();
      assertFalse(file0.isFile());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.75F, (-270));
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0, nullStatsLogger0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false);
      MockFile mockFile0 = new MockFile("org.apache.bookkeeper.conf.readsystemproperties", "C>r0");
      JournalAliveListener journalAliveListener0 = mock(JournalAliveListener.class, new ViolatedAssumptionAnswer());
      Journal journal0 = Journal.newJournal(711, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, unpooledByteBufAllocator0, journalAliveListener0);
      File file0 = journal0.getJournalDirectory();
      assertFalse(file0.exists());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(false);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      // Undeclared exception!
      try { 
        Journal.writePaddingBytes((JournalChannel) null, emptyByteBuf0, (-4295));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      // Undeclared exception!
      try { 
        journal0.setLastLogMark((Long) null, (-4L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      File file0 = MockFile.createTempFile("ForceWrite thread interrupted", "ForceWrite thread interrupted");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      AdaptiveByteBufAllocator adaptiveByteBufAllocator0 = new AdaptiveByteBufAllocator(true);
      JournalAliveListener journalAliveListener0 = mock(JournalAliveListener.class, new ViolatedAssumptionAnswer());
      Journal journal0 = Journal.newJournal(165, file0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, adaptiveByteBufAllocator0, journalAliveListener0);
      Journal.JournalScanner journal_JournalScanner0 = mock(Journal.JournalScanner.class, new ViolatedAssumptionAnswer());
      try { 
        journal0.scanJournal(2048L, 1081L, journal_JournalScanner0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // File /tmp/ForceWrite thread interrupted0ForceWrite thread interrupted/800.txn suddenly appeared, is another bookie process running?
         //
         verifyException("org.apache.bookkeeper.bookie.JournalChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Long long0 = Long.getLong("enforceMinNumRacksPerWriteQuorum", 0L);
      try { 
        journal0.newLogFile(0L, long0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      NullStatsLogger nullStatsLogger0 = new NullStatsLogger();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      JournalAliveListener journalAliveListener0 = mock(JournalAliveListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        Journal.newJournal(0, mockFile0, serverConfiguration0, (LedgerDirsManager) null, nullStatsLogger0, unpooledByteBufAllocator0, journalAliveListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal$LastLogMark", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.95F, 0);
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0);
      Journal journal0 = new Journal(0, (File) null, serverConfiguration0, ledgerDirsManager0);
      BookieImpl.NopWriteCallback bookieImpl_NopWriteCallback0 = new BookieImpl.NopWriteCallback();
      // Undeclared exception!
      try { 
        journal0.logAddEntry((ByteBuf) null, false, (BookkeeperInternalCallbacks.WriteCallback) bookieImpl_NopWriteCallback0, (Object) serverConfiguration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.75F, (-270));
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0, nullStatsLogger0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false);
      CompositeByteBuf compositeByteBuf0 = unpooledByteBufAllocator0.compositeHeapBuffer();
      JournalAliveListener journalAliveListener0 = mock(JournalAliveListener.class, new ViolatedAssumptionAnswer());
      Journal journal0 = Journal.newJournal((-270), (File) null, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, unpooledByteBufAllocator0, journalAliveListener0);
      // Undeclared exception!
      try { 
        journal0.logAddEntry((ByteBuf) compositeByteBuf0, true, (BookkeeperInternalCallbacks.WriteCallback) null, (Object) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // index: 0, length: 8 (expected: range(0, 0))
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Journal.JournalIdFilter journal_JournalIdFilter0 = mock(Journal.JournalIdFilter.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        Journal.listJournalIds((File) null, journal_JournalIdFilter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.95F, 0);
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0);
      Journal journal0 = new Journal(0, (File) null, serverConfiguration0, ledgerDirsManager0);
      CheckpointSource.Checkpoint checkpointSource_Checkpoint0 = journal0.newCheckpoint();
      try { 
        journal0.checkpointComplete(checkpointSource_Checkpoint0, false);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // All ledger directories are non writable and no reserved space (1073741824) left.
         //
         verifyException("org.apache.bookkeeper.bookie.LedgerDirsManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, (File) null, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      CheckpointSource.Checkpoint checkpointSource_Checkpoint0 = journal0.newCheckpoint();
      // Undeclared exception!
      try { 
        journal0.checkpointComplete(checkpointSource_Checkpoint0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      File file0 = MockFile.createTempFile("ForceWrite Thread started", "ForceWrite Thread started");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      NullStatsLogger nullStatsLogger0 = new NullStatsLogger();
      JournalAliveListener journalAliveListener0 = mock(JournalAliveListener.class, new ViolatedAssumptionAnswer());
      Journal journal0 = null;
      try {
        journal0 = new Journal(0, file0, serverConfiguration0, (LedgerDirsManager) null, nullStatsLogger0, (ByteBufAllocator) null, journalAliveListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal$LastLogMark", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockFile mockFile0 = new MockFile("getBookieServiceInfo {} -> {}", "tlsProvider");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      Journal journal0 = null;
      try {
        journal0 = new Journal(203, mockFile0, serverConfiguration0, (LedgerDirsManager) null, nullStatsLogger0, (ByteBufAllocator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal$LastLogMark", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      File file0 = MockFile.createTempFile("org.apache.bookkeeper.bookie.Journal$JournalRollingFilter", "Finished Shutting down Journal thread");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      Journal journal0 = null;
      try {
        journal0 = new Journal(427, file0, serverConfiguration0, (LedgerDirsManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal$LastLogMark", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      journal0.start();
      journal0.interruptThread();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.95F, 0);
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0);
      Journal journal0 = new Journal(0, (File) null, serverConfiguration0, ledgerDirsManager0);
      journal0.interruptThread();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      journal0.start();
      journal0.joinThread();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      Journal.LastLogMark journal_LastLogMark0 = journal0.new LastLogMark((-4L), 8199);
      LogMark logMark0 = journal_LastLogMark0.getCurMark();
      assertEquals(8199L, logMark0.getLogFileOffset());
      assertEquals((-4L), logMark0.getLogFileId());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile("vKTN\"DAkAwM.?", "vKTN\"DAkAwM.?");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[6];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      fileArray0[2] = (File) mockFile0;
      fileArray0[3] = (File) mockFile0;
      fileArray0[4] = (File) mockFile0;
      fileArray0[5] = (File) mockFile0;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null);
      NullStatsLogger nullStatsLogger0 = new NullStatsLogger();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true);
      JournalAliveListener journalAliveListener0 = mock(JournalAliveListener.class, new ViolatedAssumptionAnswer());
      Journal journal0 = new Journal(0, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, unpooledByteBufAllocator0, journalAliveListener0);
      journal0.joinThread();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = Journal.BufferedChannelBuilder.DEFAULT_BCBUILDER;
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.95F, 0);
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0);
      Journal journal0 = new Journal(0, (File) null, serverConfiguration0, ledgerDirsManager0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("1e8480.txn");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "desiredNumZonesPerWriteQuorum");
      long long0 = journal0.scanJournal(2000000L, 0, (Journal.JournalScanner) null, false);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      journal0.checkpointComplete((CheckpointSource.Checkpoint) null, false);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.95F, 0);
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      ServerConfiguration serverConfiguration1 = serverConfiguration0.setJournalFlushWhenQueueEmpty(true);
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration1, fileArray0, diskChecker0);
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true, true);
      Journal journal0 = new Journal(0, (File) null, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, unpooledByteBufAllocator0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      Journal.LastLogMark journal_LastLogMark0 = journal0.new LastLogMark((-4L), 8199);
      CheckpointSource.Checkpoint checkpointSource_Checkpoint0 = journal0.newCheckpoint();
      journal0.checkpointComplete(checkpointSource_Checkpoint0, true);
      journal_LastLogMark0.readLog();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("current/lastMark");
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      Journal.LastLogMark journal_LastLogMark0 = journal0.getLastLogMark();
      CheckpointSource.Checkpoint checkpointSource_Checkpoint0 = journal0.newCheckpoint();
      journal0.checkpointComplete(checkpointSource_Checkpoint0, false);
      journal_LastLogMark0.readLog();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      long long0 = journal0.scanJournal(8199, 8199, (Journal.JournalScanner) null, false);
      assertEquals(516L, long0);
      
      Journal.JournalIdFilter journal_JournalIdFilter0 = mock(Journal.JournalIdFilter.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(journal_JournalIdFilter0).accept(anyLong());
      List<Long> list0 = Journal.listJournalIds(mockFile0, journal_JournalIdFilter0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      long long0 = journal0.scanJournal(8199, 8199, (Journal.JournalScanner) null, false);
      assertEquals(516L, long0);
      
      Journal.JournalIdFilter journal_JournalIdFilter0 = mock(Journal.JournalIdFilter.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(journal_JournalIdFilter0).accept(anyLong());
      List<Long> list0 = Journal.listJournalIds(mockFile0, journal_JournalIdFilter0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/oMliz/<s%)Afew0oMliz/<s%)Afew");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = MockFile.createTempFile("oMliz/<s%)Afew", "oMliz/<s%)Afew");
      List<Long> list0 = Journal.listJournalIds(file0, (Journal.JournalIdFilter) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Journal.JournalIdFilter journal_JournalIdFilter0 = mock(Journal.JournalIdFilter.class, new ViolatedAssumptionAnswer());
      MockFile mockFile0 = new MockFile("enforceMinNumFaultDomainsForWrite", "org.apache.bookkeeper.conf.readsystemproperties");
      List<Long> list0 = Journal.listJournalIds(mockFile0, journal_JournalIdFilter0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      journal0.shutdown();
      journal0.shutdown();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.75F, (-270));
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0, nullStatsLogger0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false);
      JournalAliveListener journalAliveListener0 = mock(JournalAliveListener.class, new ViolatedAssumptionAnswer());
      Journal journal0 = Journal.newJournal((-270), (File) null, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, unpooledByteBufAllocator0, journalAliveListener0);
      File file0 = journal0.getJournalDirectory();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      JournalStats journalStats0 = journal0.getJournalStats();
      assertNotNull(journalStats0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.95F, 0);
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0);
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, false, true);
      Journal journal0 = new Journal(0, (File) null, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, unpooledByteBufAllocator0);
      int int0 = journal0.getJournalQueueLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.75F, (-270));
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0, nullStatsLogger0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false);
      JournalAliveListener journalAliveListener0 = mock(JournalAliveListener.class, new ViolatedAssumptionAnswer());
      Journal journal0 = Journal.newJournal((-270), (File) null, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, unpooledByteBufAllocator0, journalAliveListener0);
      Long long0 = new Long(326L);
      journal0.setLastLogMark(long0, 326L);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.95F, 0);
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0);
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, false, true);
      Journal journal0 = new Journal(0, (File) null, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, unpooledByteBufAllocator0);
      MemoryLimitController memoryLimitController0 = new MemoryLimitController(0);
      journal0.setMemoryLimitController(memoryLimitController0);
      assertEquals(0L, memoryLimitController0.currentUsage());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      long long0 = journal0.getMemoryUsage();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.95F, 0);
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0);
      Journal journal0 = new Journal(0, (File) null, serverConfiguration0, ledgerDirsManager0);
      journal0.setForceWriteRequests((BatchedBlockingQueue<Journal.ForceWriteRequest>) null);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      Journal.BufferedChannelBuilder journal_BufferedChannelBuilder0 = journal0.getBufferedChannelBuilder();
      assertNotNull(journal_BufferedChannelBuilder0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      BookieImpl.NopWriteCallback bookieImpl_NopWriteCallback0 = new BookieImpl.NopWriteCallback();
      StandardOpenOption standardOpenOption0 = StandardOpenOption.READ;
      journal0.forceLedger(5635L, bookieImpl_NopWriteCallback0, standardOpenOption0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[0];
      DiskChecker diskChecker0 = new DiskChecker(0.95F, 0);
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0);
      Journal journal0 = new Journal(0, (File) null, serverConfiguration0, ledgerDirsManager0);
      Journal.LastLogMark journal_LastLogMark0 = journal0.getLastLogMark();
      String string0 = journal_LastLogMark0.toString();
      assertEquals("LogMark: logFileId - 0 , logFileOffset - 0", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = new Journal(8199, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
      AdaptiveByteBufAllocator adaptiveByteBufAllocator0 = new AdaptiveByteBufAllocator(false, true);
      ByteBuf byteBuf0 = adaptiveByteBufAllocator0.ioBuffer(8199, 2147481600);
      BookieImpl.NopWriteCallback bookieImpl_NopWriteCallback0 = new BookieImpl.NopWriteCallback();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ScopeContext scopeContext0 = new ScopeContext("minNumZonesPerWriteQuorum", hashMap0);
      ThreadScopedDataSketchesStatsLogger threadScopedDataSketchesStatsLogger0 = new ThreadScopedDataSketchesStatsLogger((PrometheusMetricsProvider) null, scopeContext0, hashMap0);
      CachingStatsLogger cachingStatsLogger0 = new CachingStatsLogger(nullStatsLogger0);
      Counter counter0 = cachingStatsLogger0.getThreadScopedCounter("<<?");
      Journal.QueueEntry journal_QueueEntry0 = Journal.QueueEntry.create(byteBuf0, false, (-453L), 8199, bookieImpl_NopWriteCallback0, (Object) null, 8199, threadScopedDataSketchesStatsLogger0, counter0);
      journal0.logAddEntry(byteBuf0, false, (BookkeeperInternalCallbacks.WriteCallback) bookieImpl_NopWriteCallback0, (Object) journal_QueueEntry0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, false);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      BookieImpl.NopWriteCallback bookieImpl_NopWriteCallback0 = new BookieImpl.NopWriteCallback();
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      OpStatsLogger opStatsLogger0 = nullStatsLogger0.getOpStatsLogger("Iyz0$V9I/g}Ch");
      PrometheusMetricsProvider prometheusMetricsProvider0 = new PrometheusMetricsProvider();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ScopeContext scopeContext0 = new ScopeContext("oMliz/<s%)Afew", hashMap0);
      ThreadScopedLongAdderCounter threadScopedLongAdderCounter0 = new ThreadScopedLongAdderCounter(prometheusMetricsProvider0, scopeContext0, hashMap0);
      Journal.QueueEntry journal_QueueEntry0 = Journal.QueueEntry.create(emptyByteBuf0, true, 1692L, 3L, bookieImpl_NopWriteCallback0, (Object) null, 3L, opStatsLogger0, threadScopedLongAdderCounter0);
      journal_QueueEntry0.run();
  }
}
